// automatically generated by Xtext
grammar org.yazgel.aphrodit.xtext.Aphrodit with org.eclipse.xtext.common.Terminals

import "platform:/resource/org.yazgel.aphrodit/model/aphrodit.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
	{Model}
	'Model'
	'{'
		('page' page=Page)?
	'}';

SectionElement returns SectionElement:
	Row | Header | Paragraf | Carousel | Image | Card | Anchor | Division | Map;

MenuElement returns MenuElement:
	Header | Image | MenuItem;

RowElement returns RowElement:
	Row | Header | Paragraf | Carousel | Image | Card | Anchor | Division | Map;

CarouselElement returns CarouselElement:
	CarouselPage;

CardElement returns CardElement:
	CardPage;

DivisionElement returns DivisionElement:
	Row | Header | Paragraf | Carousel | Image | Card | Anchor | Division | Map;

CarouselPageElement returns CarouselPageElement:
	Header | Paragraf | Image | Anchor | Division;

CardPageElement returns CardPageElement:
	Header | Paragraf | Image | Anchor | Division;

Page returns Page:
	{Page}
	'Page'
	'{'
		('title' title=EString)?
		('introSection' introSection=[Section|EString])?
		('sections' '{' sections+=Section ( "," sections+=Section)* '}' )?
		('menu' menu=Menu)?
	'}';

EString returns ecore::EString:
	STRING | ID;

Section returns Section:
	{Section}
	'Section'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('elements' '{' elements+=SectionElement ( "," elements+=SectionElement)* '}' )?
	'}';

Menu returns Menu:
	{Menu}
	'Menu'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('items' '{' items+=MenuElement ( "," items+=MenuElement)* '}' )?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

Row returns Row:
	{Row}
	'Row'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('elements' '{' elements+=RowElement ( "," elements+=RowElement)* '}' )?
	'}';

Header returns Header:
	{Header}
	'Header'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('type' type=HeaderType)?
		('content' content=EString)?
	'}';

Paragraf returns Paragraf:
	{Paragraf}
	'Paragraf'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('content' content=EString)?
	'}';

Carousel returns Carousel:
	{Carousel}
	'Carousel'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('carouselPages' '{' carouselPages+=CarouselElement ( "," carouselPages+=CarouselElement)* '}' )?
	'}';

Image returns Image:
	{Image}
	'Image'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('src' src=EString)?
		('borderRadius' borderRadius=EString)?
	'}';

Card returns Card:
	{Card}
	'Card'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('pages' '{' pages+=CardElement ( "," pages+=CardElement)* '}' )?
	'}';

Anchor returns Anchor:
	{Anchor}
	'Anchor'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('title' title=EString)?
		('link' link=EString)?
		('type' type=AnchorType)?
	'}';

Division returns Division:
	{Division}
	'Division'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('elements' '{' elements+=DivisionElement ( "," elements+=DivisionElement)* '}' )?
	'}';

Map returns Map:
	{Map}
	'Map'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('x' x=EString)?
		('y' y=EString)?
	'}';

enum HeaderType returns HeaderType:
				H1 = 'H1' | H2 = 'H2' | H3 = 'H3' | H4 = 'H4' | H5 = 'H5' | H6 = 'H6';

CarouselPage returns CarouselPage:
	{CarouselPage}
	'CarouselPage'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('elements' '{' elements+=CarouselPageElement ( "," elements+=CarouselPageElement)* '}' )?
	'}';

CardPage returns CardPage:
	{CardPage}
	'CardPage'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('elements' '{' elements+=CardPageElement ( "," elements+=CardPageElement)* '}' )?
	'}';

enum AnchorType returns AnchorType:
				default = 'default' | btn_default = 'btn_default' | btn_primary = 'btn_primary' | btn_success = 'btn_success' | btn_info = 'btn_info' | btn_warning = 'btn_warning' | btn_danger = 'btn_danger';

MenuItem returns MenuItem:
	{MenuItem}
	'MenuItem'
	name=EString
	'{'
		('colSpan' colSpan=EInt)?
		('color' color=EString)?
		('backgroundColor' backgroundColor=EString)?
		('backgroundImage' backgroundImage=EString)?
		('title' title=EString)?
		('section' section=[Section|EString])?
	'}';
